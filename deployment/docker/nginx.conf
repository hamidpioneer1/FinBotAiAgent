# Nginx configuration for FinBotAiAgent dual deployment
# Supports both GitHub Actions (port 8080) and AWS CodePipeline (port 8081)

# Upstream servers for load balancing
upstream finbotaiagent_backend {
    # GitHub Actions deployment (port 8080)
    server localhost:8080 max_fails=3 fail_timeout=30s;
    
    # AWS CodePipeline deployment (port 8081) - primary
    server localhost:8081 max_fails=3 fail_timeout=30s;
    
    # Load balancing method
    least_conn;
    
    # Health check
    keepalive 32;
}

# Health check upstream for monitoring
upstream health_check {
    server localhost:8080;
    server localhost:8081;
}

# Main server block
server {
    listen 80;
    server_name _;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header X-Deployment-Info "Dual-Deployment-v1.0" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req zone=api burst=20 nodelay;
    
    # Main application - load balanced
    location / {
        # Apply rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to upstream servers
        proxy_pass http://finbotaiagent_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        
        # Timeout settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check endpoint - checks both services
    location /health {
        access_log off;
        
        # Try both services
        proxy_pass http://health_check/weatherforecast;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_connect_timeout 2s;
        proxy_read_timeout 5s;
        
        # Fallback if primary fails
        error_page 502 503 504 = @health_fallback;
    }
    
    # Health check fallback
    location @health_fallback {
        # Try the other service
        proxy_pass http://localhost:8081/weatherforecast;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_connect_timeout 2s;
        proxy_read_timeout 5s;
    }
    
    # Service-specific endpoints for testing
    location /github-actions {
        rewrite ^/github-actions/(.*) /$1 break;
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /codepipeline {
        rewrite ^/codepipeline/(.*) /$1 break;
        proxy_pass http://localhost:8081;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Status page for monitoring
    location /status {
        access_log off;
        return 200 '{"status":"healthy","timestamp":"$time_iso8601","services":{"github_actions":"http://localhost:8080","codepipeline":"http://localhost:8081"}}';
        add_header Content-Type application/json;
    }
    
    # API documentation
    location /swagger {
        proxy_pass http://finbotaiagent_backend/swagger;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static files caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://finbotaiagent_backend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/x-javascript 
        application/xml+rss 
        application/json
        application/javascript
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;
    
    # Logging
    access_log /var/log/nginx/finbotaiagent_access.log;
    error_log /var/log/nginx/finbotaiagent_error.log;
}

# Optional: HTTPS server block (uncomment when SSL is configured)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     ssl_certificate /path/to/certificate.crt;
#     ssl_certificate_key /path/to/private.key;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Include the same location blocks as above
#     include /etc/nginx/conf.d/locations.conf;
# }